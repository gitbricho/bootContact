: Neither @ContextConfiguration nor @ContextHierarchy found for test class [bootapp.ThymeControllerTest], using SpringBootContextLoader :buildDefaultMergedContextConfiguration
: Could not detect default resource locations for test class [bootapp.ThymeControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}. :generateDefaultLocations
: Could not detect default configuration classes for test class [bootapp.ThymeControllerTest]: ThymeControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration. :detectDefaultConfigurationClasses
: Found @SpringBootConfiguration bootapp.App for test class bootapp.ThymeControllerTest :getOrFindConfigurationClasses
: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener] :getDefaultTestExecutionListenerClassNames
: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4ddced80, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1534f01b, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@78e117e3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2ea227af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4386f16, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@363ee3a2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4690b489, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@79b06cab, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3eb7fc54, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7f552bd3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3c22fc4c, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@460d0a57, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@47d90b9e] :getTestExecutionListeners

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v1.5.3.RELEASE)

: HV000001: Hibernate Validator 5.3.5.Final :<clinit>
: Starting ThymeControllerTest on tt-mbp.local with PID 18489 (started by bri_tcho in /Users/bri_tcho/_PRJ/ecprj/bootContact.git/bootThyme) :logStarting
: Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE :logStarting
: No active profile set, falling back to default profiles: default :logStartupProfileInfo
: Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b410b60: startup date [Sun Jun 18 12:32:33 JST 2017]; root of context hierarchy :prepareRefresh
: Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]] :registerBeanDefinition
: Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]] :registerBeanDefinition
: Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a698eb7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) :postProcessAfterInitialization
: Tomcat initialized with port(s): 0 (http) :initialize
: Starting service Tomcat :log
: Starting Servlet Engine: Apache Tomcat/8.5.14 :log
: Initializing Spring embedded WebApplicationContext :log
: Root WebApplicationContext: initialization completed in 2749 ms :prepareEmbeddedWebApplicationContext
: Mapping filter: 'metricsFilter' to: [/*] :configure
: Mapping filter: 'characterEncodingFilter' to: [/*] :configure
: Mapping filter: 'hiddenHttpMethodFilter' to: [/*] :configure
: Mapping filter: 'httpPutFormContentFilter' to: [/*] :configure
: Mapping filter: 'requestContextFilter' to: [/*] :configure
: Mapping filter: 'springSecurityFilterChain' to: [/*] :configure
: Mapping filter: 'webRequestLoggingFilter' to: [/*] :configure
: Mapping filter: 'applicationContextIdFilter' to: [/*] :configure
: Mapping servlet: 'dispatcherServlet' to [/] :onStartup
: Loaded JDBC driver: org.h2.Driver :setDriverClassName
: Building JPA container EntityManagerFactory for persistence unit 'default' :createNativeEntityManagerFactory
[EL Config]: metadata: 2017-06-18 12:32:36.918--ServerSession(44227594)--The access type for the persistent class [class bootapp.model.AbstractPersistentEntity] is set to [FIELD].
[EL Config]: metadata: 2017-06-18 12:32:36.952--ServerSession(44227594)--The access type for the persistent class [class bootapp.model.Address] is set to [FIELD].
[EL Config]: metadata: 2017-06-18 12:32:36.956--ServerSession(44227594)--The access type for the persistent class [class bootapp.model.Mail] is set to [FIELD].
[EL Config]: metadata: 2017-06-18 12:32:36.957--ServerSession(44227594)--The access type for the persistent class [class bootapp.model.Contact] is set to [FIELD].
[EL Config]: metadata: 2017-06-18 12:32:36.967--ServerSession(44227594)--The target entity (reference) class for the one to many mapping element [field addresses] is being defaulted to: class bootapp.model.Address.
[EL Config]: metadata: 2017-06-18 12:32:36.968--ServerSession(44227594)--The target entity (reference) class for the one to many mapping element [field phones] is being defaulted to: class bootapp.model.Phone.
[EL Config]: metadata: 2017-06-18 12:32:36.968--ServerSession(44227594)--The target entity (reference) class for the one to many mapping element [field mails] is being defaulted to: class bootapp.model.Mail.
[EL Config]: metadata: 2017-06-18 12:32:36.97--ServerSession(44227594)--The target entity (reference) class for the many to one mapping element [field user] is being defaulted to: class bootapp.model.User.
[EL Config]: metadata: 2017-06-18 12:32:36.97--ServerSession(44227594)--The access type for the persistent class [class bootapp.model.Phone] is set to [FIELD].
[EL Config]: metadata: 2017-06-18 12:32:36.971--ServerSession(44227594)--The access type for the persistent class [class bootapp.model.User] is set to [FIELD].
[EL Config]: metadata: 2017-06-18 12:32:36.977--ServerSession(44227594)--The column name for element [id] is being defaulted to: ID.
[EL Config]: metadata: 2017-06-18 12:32:36.979--ServerSession(44227594)--The column name for element [version] is being defaulted to: VERSION.
[EL Config]: metadata: 2017-06-18 12:32:36.981--ServerSession(44227594)--The alias name for the entity class [class bootapp.model.Address] is being defaulted to: Address.
[EL Config]: metadata: 2017-06-18 12:32:36.981--ServerSession(44227594)--The table name for entity [class bootapp.model.Address] is being defaulted to: ADDRESS.
[EL Config]: metadata: 2017-06-18 12:32:36.994--ServerSession(44227594)--The column name for element [banchi] is being defaulted to: BANCHI.
[EL Config]: metadata: 2017-06-18 12:32:36.995--ServerSession(44227594)--The column name for element [yubin] is being defaulted to: YUBIN.
[EL Config]: metadata: 2017-06-18 12:32:36.995--ServerSession(44227594)--The column name for element [addressType] is being defaulted to: ADDRESSTYPE.
[EL Config]: metadata: 2017-06-18 12:32:36.995--ServerSession(44227594)--The column name for element [banchi2] is being defaulted to: BANCHI2.
[EL Config]: metadata: 2017-06-18 12:32:36.995--ServerSession(44227594)--The column name for element [sikuchoson] is being defaulted to: SIKUCHOSON.
[EL Config]: metadata: 2017-06-18 12:32:36.995--ServerSession(44227594)--The column name for element [webpage] is being defaulted to: WEBPAGE.
[EL Config]: metadata: 2017-06-18 12:32:36.996--ServerSession(44227594)--The column name for element [id] is being defaulted to: ID.
[EL Config]: metadata: 2017-06-18 12:32:36.996--ServerSession(44227594)--The column name for element [version] is being defaulted to: VERSION.
[EL Config]: metadata: 2017-06-18 12:32:36.996--ServerSession(44227594)--The column name for element [todofuken] is being defaulted to: TODOFUKEN.
[EL Config]: metadata: 2017-06-18 12:32:36.996--ServerSession(44227594)--The alias name for the entity class [class bootapp.model.Mail] is being defaulted to: Mail.
[EL Config]: metadata: 2017-06-18 12:32:36.996--ServerSession(44227594)--The table name for entity [class bootapp.model.Mail] is being defaulted to: MAIL.
[EL Config]: metadata: 2017-06-18 12:32:36.997--ServerSession(44227594)--The column name for element [mailType] is being defaulted to: MAILTYPE.
[EL Config]: metadata: 2017-06-18 12:32:36.997--ServerSession(44227594)--The column name for element [mail] is being defaulted to: MAIL.
[EL Config]: metadata: 2017-06-18 12:32:36.997--ServerSession(44227594)--The column name for element [id] is being defaulted to: ID.
[EL Config]: metadata: 2017-06-18 12:32:36.998--ServerSession(44227594)--The column name for element [version] is being defaulted to: VERSION.
[EL Config]: metadata: 2017-06-18 12:32:36.998--ServerSession(44227594)--The alias name for the entity class [class bootapp.model.Contact] is being defaulted to: Contact.
[EL Config]: metadata: 2017-06-18 12:32:36.998--ServerSession(44227594)--The table name for entity [class bootapp.model.Contact] is being defaulted to: CONTACT.
[EL Config]: metadata: 2017-06-18 12:32:36.999--ServerSession(44227594)--The column name for element [seibetu] is being defaulted to: SEIBETU.
[EL Config]: metadata: 2017-06-18 12:32:36.999--ServerSession(44227594)--The column name for element [googleid] is being defaulted to: GOOGLEID.
[EL Config]: metadata: 2017-06-18 12:32:36.999--ServerSession(44227594)--The column name for element [simeiMei] is being defaulted to: SIMEIMEI.
[EL Config]: metadata: 2017-06-18 12:32:36.999--ServerSession(44227594)--The column name for element [seinenGappi] is being defaulted to: SEINENGAPPI.
[EL Config]: metadata: 2017-06-18 12:32:37.0--ServerSession(44227594)--The column name for element [syumi] is being defaulted to: SYUMI.
[EL Config]: metadata: 2017-06-18 12:32:37.0--ServerSession(44227594)--The column name for element [simeiSei] is being defaulted to: SIMEISEI.
[EL Config]: metadata: 2017-06-18 12:32:37.0--ServerSession(44227594)--The column name for element [yomiSei] is being defaulted to: YOMISEI.
[EL Config]: metadata: 2017-06-18 12:32:37.0--ServerSession(44227594)--The column name for element [memo] is being defaulted to: MEMO.
[EL Config]: metadata: 2017-06-18 12:32:37.0--ServerSession(44227594)--The column name for element [version] is being defaulted to: VERSION.
[EL Config]: metadata: 2017-06-18 12:32:37.001--ServerSession(44227594)--The column name for element [picture] is being defaulted to: PICTURE.
[EL Config]: metadata: 2017-06-18 12:32:37.001--ServerSession(44227594)--The column name for element [yomiMei] is being defaulted to: YOMIMEI.
[EL Config]: metadata: 2017-06-18 12:32:37.001--ServerSession(44227594)--The column name for element [syubetu] is being defaulted to: SYUBETU.
[EL Config]: metadata: 2017-06-18 12:32:37.001--ServerSession(44227594)--The column name for element [kaisya] is being defaulted to: KAISYA.
[EL Config]: metadata: 2017-06-18 12:32:37.001--ServerSession(44227594)--The column name for element [id] is being defaulted to: ID.
[EL Config]: metadata: 2017-06-18 12:32:37.001--ServerSession(44227594)--The alias name for the entity class [class bootapp.model.Phone] is being defaulted to: Phone.
[EL Config]: metadata: 2017-06-18 12:32:37.002--ServerSession(44227594)--The table name for entity [class bootapp.model.Phone] is being defaulted to: PHONE.
[EL Config]: metadata: 2017-06-18 12:32:37.002--ServerSession(44227594)--The column name for element [phoneType] is being defaulted to: PHONETYPE.
[EL Config]: metadata: 2017-06-18 12:32:37.002--ServerSession(44227594)--The column name for element [id] is being defaulted to: ID.
[EL Config]: metadata: 2017-06-18 12:32:37.002--ServerSession(44227594)--The column name for element [version] is being defaulted to: VERSION.
[EL Config]: metadata: 2017-06-18 12:32:37.002--ServerSession(44227594)--The column name for element [telno] is being defaulted to: TELNO.
[EL Config]: metadata: 2017-06-18 12:32:37.003--ServerSession(44227594)--The alias name for the entity class [class bootapp.model.User] is being defaulted to: User.
[EL Config]: metadata: 2017-06-18 12:32:37.003--ServerSession(44227594)--The column name for element [encodePass] is being defaulted to: ENCODEPASS.
[EL Config]: metadata: 2017-06-18 12:32:37.003--ServerSession(44227594)--The column name for element [syubetu] is being defaulted to: SYUBETU.
[EL Config]: metadata: 2017-06-18 12:32:37.003--ServerSession(44227594)--The column name for element [roles] is being defaulted to: ROLES.
[EL Config]: metadata: 2017-06-18 12:32:37.003--ServerSession(44227594)--The column name for element [name] is being defaulted to: NAME.
[EL Config]: metadata: 2017-06-18 12:32:37.003--ServerSession(44227594)--The column name for element [theme] is being defaulted to: THEME.
[EL Config]: metadata: 2017-06-18 12:32:37.004--ServerSession(44227594)--The column name for element [yomi] is being defaulted to: YOMI.
[EL Config]: metadata: 2017-06-18 12:32:37.004--ServerSession(44227594)--The column name for element [id] is being defaulted to: ID.
[EL Config]: metadata: 2017-06-18 12:32:37.004--ServerSession(44227594)--The column name for element [version] is being defaulted to: VERSION.
[EL Config]: metadata: 2017-06-18 12:32:37.004--ServerSession(44227594)--The column name for element [simei] is being defaulted to: SIMEI.
[EL Config]: metadata: 2017-06-18 12:32:37.004--ServerSession(44227594)--The column name for element [email] is being defaulted to: EMAIL.
[EL Config]: metadata: 2017-06-18 12:32:37.03--ServerSession(44227594)--The join table name for the many to many mapping [field addresses] is being defaulted to: CONTACT_ADDRESS.
[EL Config]: metadata: 2017-06-18 12:32:37.032--ServerSession(44227594)--The source primary key column name for the many to many mapping [field addresses] is being defaulted to: ID.
[EL Config]: metadata: 2017-06-18 12:32:37.032--ServerSession(44227594)--The source foreign key column name for the many to many mapping [addresses] is being defaulted to: Contact_ID.
[EL Config]: metadata: 2017-06-18 12:32:37.032--ServerSession(44227594)--The target primary key column name for the many to many mapping [field addresses] is being defaulted to: ID.
[EL Config]: metadata: 2017-06-18 12:32:37.032--ServerSession(44227594)--The target foreign key column name for the many to many mapping [addresses] is being defaulted to: addresses_ID.
[EL Config]: metadata: 2017-06-18 12:32:37.033--ServerSession(44227594)--The join table name for the many to many mapping [field phones] is being defaulted to: CONTACT_PHONE.
[EL Config]: metadata: 2017-06-18 12:32:37.033--ServerSession(44227594)--The source primary key column name for the many to many mapping [field phones] is being defaulted to: ID.
[EL Config]: metadata: 2017-06-18 12:32:37.033--ServerSession(44227594)--The source foreign key column name for the many to many mapping [phones] is being defaulted to: Contact_ID.
[EL Config]: metadata: 2017-06-18 12:32:37.033--ServerSession(44227594)--The target primary key column name for the many to many mapping [field phones] is being defaulted to: ID.
[EL Config]: metadata: 2017-06-18 12:32:37.033--ServerSession(44227594)--The target foreign key column name for the many to many mapping [phones] is being defaulted to: phones_ID.
[EL Config]: metadata: 2017-06-18 12:32:37.033--ServerSession(44227594)--The join table name for the many to many mapping [field mails] is being defaulted to: CONTACT_MAIL.
[EL Config]: metadata: 2017-06-18 12:32:37.034--ServerSession(44227594)--The source primary key column name for the many to many mapping [field mails] is being defaulted to: ID.
[EL Config]: metadata: 2017-06-18 12:32:37.034--ServerSession(44227594)--The source foreign key column name for the many to many mapping [mails] is being defaulted to: Contact_ID.
[EL Config]: metadata: 2017-06-18 12:32:37.034--ServerSession(44227594)--The target primary key column name for the many to many mapping [field mails] is being defaulted to: ID.
[EL Config]: metadata: 2017-06-18 12:32:37.034--ServerSession(44227594)--The target foreign key column name for the many to many mapping [mails] is being defaulted to: mails_ID.
[EL Config]: metadata: 2017-06-18 12:32:37.042--ServerSession(44227594)--The primary key column name for the mapping element [field user] is being defaulted to: ID.
[EL Config]: metadata: 2017-06-18 12:32:37.042--ServerSession(44227594)--The foreign key column name for the mapping element [user] is being defaulted to: USER_ID.
[EL Info]: 2017-06-18 12:32:37.094--ServerSession(44227594)--EclipseLink, version: Eclipse Persistence Services - 2.6.3.v20160428-59c81c5
[EL Config]: connection: 2017-06-18 12:32:37.102--ServerSession(44227594)--Connection(456832249)--connecting(DatabaseLogin(
	platform=>H2Platform
	user name=> ""
	connector=>JNDIConnector datasource name=>null
))
[EL Config]: connection: 2017-06-18 12:32:37.316--ServerSession(44227594)--Connection(1798823822)--Connected: jdbc:h2:~/_data/h2/contact
	User: DEMO
	Database: H2  Version: 1.4.194 (2017-03-10)
	Driver: H2 JDBC Driver  Version: 1.4.194 (2017-03-10)
[EL Config]: connection: 2017-06-18 12:32:37.318--ServerSession(44227594)--Connection(2086532629)--connecting(DatabaseLogin(
	platform=>H2Platform
	user name=> ""
	connector=>JNDIConnector datasource name=>null
))
[EL Config]: connection: 2017-06-18 12:32:37.341--ServerSession(44227594)--Connection(366180667)--Connected: jdbc:h2:~/_data/h2/contact
	User: DEMO
	Database: H2  Version: 1.4.194 (2017-03-10)
	Driver: H2 JDBC Driver  Version: 1.4.194 (2017-03-10)
[EL Info]: connection: 2017-06-18 12:32:37.4--ServerSession(44227594)--/file:/Users/bri_tcho/_PRJ/ecprj/bootContact.git/bootThyme/bin/_default login successful
: Initialized JPA EntityManagerFactory for persistence unit 'default' :buildNativeEntityManagerFactory
: Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b410b60: startup date [Sun Jun 18 12:32:33 JST 2017]; root of context hierarchy :initControllerAdviceCache
: Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice :initControllerAdviceCache
: Mapped "{[/login],methods=[GET]}" onto public java.lang.String bootapp.controller.HomeController.login() :register
: Mapped "{[/ || /home],methods=[GET]}" onto public java.lang.String bootapp.controller.HomeController.home(org.springframework.ui.Model) :register
: Mapped "{[/thyme/method1]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.ThymeleafController.method1() :register
: Mapped "{[/thyme/fragField01],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.ThymeleafController.fragField01() :register
: Mapped "{[/thyme/thIteration],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.ThymeleafController.thIteration() :register
: Mapped "{[/thyme/thCondition],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.ThymeleafController.thCondition() :register
: Mapped "{[/thyme/thExpressions],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.ThymeleafController.thExpressions() throws com.fasterxml.jackson.core.JsonProcessingException :register
: Mapped "{[/thyme/thInline],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.ThymeleafController.thInline() throws com.fasterxml.jackson.core.JsonProcessingException :register
: Mapped "{[/thyme/thLiteral],methods=[GET]}" onto public java.lang.String bootapp.controller.ThymeleafController.thLiteral() :register
: Mapped "{[/thyme/fwrdOk/{data}],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.ThymeleafController.fwrdOk(int) :register
: Mapped "{[/thyme/fwrdError/{data}],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.ThymeleafController.fwrdError(int) :register
: Mapped "{[/thyme/kensyo/{data}],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.ThymeleafController.kensyo(java.lang.Integer) :register
: Mapped "{[/thyme/redirect1]}" onto public java.lang.String bootapp.controller.ThymeleafController.redirect1() :register
: Mapped "{[/user_list],methods=[GET]}" onto public java.lang.String bootapp.controller.UserController.showUserList(org.springframework.ui.Model) :register
: Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest) :register
: Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) :register
: Mapped URL path [/error] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController] :registerHandler
: Mapped URL path [/login] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController] :registerHandler
: Mapped URL path [/home] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController] :registerHandler
: Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController] :registerHandler
: Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] :registerHandler
: Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] :registerHandler
: Detected @ExceptionHandler methods in repositoryRestExceptionHandler :initExceptionHandlerAdviceCache
: Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice :initExceptionHandlerAdviceCache
: Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] :registerHandler
: [THYMELEAF][main] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead. :parse
: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], [] :<init>
: Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3400d6fa, org.springframework.security.web.context.SecurityContextPersistenceFilter@11309dd4, org.springframework.security.web.header.HeaderWriterFilter@34bf66af, org.springframework.security.web.csrf.CsrfFilter@2739ecc0, org.springframework.security.web.authentication.logout.LogoutFilter@3dfc59c5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1e7cfd49, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2bd4780c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@57839834, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@30a62a5b, org.springframework.security.web.session.SessionManagementFilter@3dec79f8, org.springframework.security.web.access.ExceptionTranslationFilter@7eefaca0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@16d61071] :<init>
: Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@77998ea7, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@252d8df6, org.springframework.security.web.context.SecurityContextPersistenceFilter@48d31d25, org.springframework.security.web.header.HeaderWriterFilter@5b59c3d, org.springframework.security.web.authentication.logout.LogoutFilter@4f2fdf3d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@86377d5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46188a89, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f65a203, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@36638b59, org.springframework.security.web.session.SessionManagementFilter@69e36fe3, org.springframework.security.web.access.ExceptionTranslationFilter@5f5a33ed, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@37fca349] :<init>
: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/**']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@112530c3, org.springframework.security.web.context.SecurityContextPersistenceFilter@391dfe7c, org.springframework.security.web.header.HeaderWriterFilter@474619d9, org.springframework.security.web.authentication.logout.LogoutFilter@5dce5c03, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@b76b7d8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@702cfbde, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7d3bcd3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@75959b0c, org.springframework.security.web.session.SessionManagementFilter@bb5f9d, org.springframework.security.web.access.ExceptionTranslationFilter@30ef32eb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@174b8d0e] :<init>
: Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b410b60: startup date [Sun Jun 18 12:32:33 JST 2017]; root of context hierarchy :initControllerAdviceCache
: Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice :initControllerAdviceCache
: Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException :register
: Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception :register
: Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception :register
: Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception :register
: Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception :register
: Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception :register
: Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception :register
: Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) :register
: Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) :register
: Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String) :register
: Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String) :register
: Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories() :register
: Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories() :register
: Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories() :register
: Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions() :register
: Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions() :register
: Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata() :register
: Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String) :register
: Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String) :register
: Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal) :register
: Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException :register
: Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String) :register
: Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException :register
: Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links() :register
: Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String) :register
: Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>) :register
: Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Initializing ProtocolHandler ["http-nio-auto-1"] :log
: Starting ProtocolHandler ["http-nio-auto-1"] :log
: Using a shared selector for servlet write/read :log
: Tomcat started on port(s): 59928 (http) :start
Create Test Data
: Started ThymeControllerTest in 25.379 seconds (JVM running for 26.36) :logStarted
: Initializing Spring FrameworkServlet '' :log
: FrameworkServlet '': initialization started :initServletBean
: FrameworkServlet '': initialization completed in 26 ms :initServletBean
: &&&&&&&&&&&&&&& Redirect :  :logTestHeader
: redirect1: :redirect1

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /thyme/redirect1
       Parameters = {}
          Headers = {}

Handler:
             Type = bootapp.controller.ThymeleafController
           Method = public java.lang.String bootapp.controller.ThymeleafController.redirect1()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = redirect:method1
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 302
    Error message = null
          Headers = {Location=[method1]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = method1
          Cookies = []
: Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b410b60: startup date [Sun Jun 18 12:32:33 JST 2017]; root of context hierarchy :doClose
: Closing JPA EntityManagerFactory for persistence unit 'default' :destroy
[EL Config]: connection: 2017-06-18 12:32:42.966--ServerSession(44227594)--Connection(1692965810)--disconnect
[EL Info]: connection: 2017-06-18 12:32:42.967--ServerSession(44227594)--/file:/Users/bri_tcho/_PRJ/ecprj/bootContact.git/bootThyme/bin/_default logout successful
